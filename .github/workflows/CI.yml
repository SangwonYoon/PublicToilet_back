name: Build

on:
  push:
    branches:
      - 'master'
      - 'new'
  pull_request:
    branches:
      - 'master'
      - 'new'

jobs:
  TEST:

    runs-on: ubuntu-latest # 실행 환경 지정
    
    services:  # 서비스할 목록들 (ex. Redis, Postgresql ...)
      mysql:   # 사용할 서비스 명
        image: mysql:5.7  # 사용할 서비스의 이미지(도커 개념 기반)
        env:   # 사용할 서비스의 환경설정
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: public_toilet
        ports: # 열어줄 포트, 8080:3306 형태로도 가능
          - 3306
        options: >-  # 서비스에 걸어줄 옵션
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      
    steps:
      - name: Set up MySQL
        run: |
          mysql --version
          sudo apt-get install -y mysql-client
          sudo service mysql start
          mysql -uroot -proot -e "CREATE DATABASE public_toilet"
          mysql -uroot -proot -e "SHOW DATABASES"

      - name: checkout source code
        uses: actions/checkout@v3 # github action 버전 지정(major version)
        
      - name: Set up JDK 11 # JAVA 버전 지정
        uses: actions/setup-java@v3
        with:
          distribution : 'temurin'
          java-version: '17'
          
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew

      - name: Build with Gradle # 실제 application build(-x 옵션을 통해 test는 제외)
        run: ./gradlew build -x test

      - name: Test with Gradle # test application build
        run: ./gradlew test

      - name: Publish Unit Test Results # test 후 result를 보기 위해 추가
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: ${{ always() }} # test가 실패해도 report를 남기기 위해 설정
        with:
          files: build/test-results/**/*.xml
